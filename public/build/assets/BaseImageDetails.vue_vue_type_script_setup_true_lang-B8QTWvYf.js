import{d as k,o as f,g as _,b as l,t as v,j as i,G as r,A as n,H as o}from"./app-BM1evEm7.js";const y={class:"base-img-details"},C=["src"],L=l("label",{for:"title"},"Title",-1),T=["placeholder"],x=l("label",{for:"link"},"Link",-1),D=["placeholder"],B=k({__name:"BaseImageDetails",props:{baseImage:{type:Object,required:!0}},emits:["deleted"],setup(d,{emit:c}){const m=c,t=d,p=a=>a.split("/").pop()??"",u=a=>{const e=route("baseimage.setprocessed"),s={id:t.baseImage.id,processed:a};n.patch(e,s).then(()=>{t.baseImage.processed=a,o.success("Image status updated")}).catch(()=>{o.error("Failed to update processed status")})},g=()=>{const a=route("baseimage.destroy",{id:t.baseImage.id});n.delete(a).then(()=>{o.success("Image deleted"),t.baseImage.processed=!1,m("deleted")}).catch(()=>{o.error("Failed to delete image")})},b=a=>{const e=a.target.value;if(e.length<1)return;const s=route("baseimage.settitle");n.patch(s,{id:t.baseImage.id,title:e}).then(()=>{o.success("Title updated")}).catch(h=>{o.error("Invalid title")})},I=a=>{const e=a.target.value;if(e.length<1)return;const s=route("baseimage.setlink");n.patch(s,{id:t.baseImage.id,link:e}).then(()=>{o.success("Link updated")}).catch(h=>{o.error("Invalid URL")})};return(a,e)=>(f(),_("div",y,[l("img",{src:t.baseImage.path,alt:"props.baseImage.title",loading:"lazy"},null,8,C),l("em",null,v(p(t.baseImage.path)),1),L,i(l("input",{"onUpdate:modelValue":e[0]||(e[0]=s=>t.baseImage.name=s),placeholder:t.baseImage.name??"No Title",onChange:e[1]||(e[1]=s=>b(s))},null,40,T),[[r,t.baseImage.name]]),x,i(l("input",{"onUpdate:modelValue":e[2]||(e[2]=s=>t.baseImage.link=s),placeholder:t.baseImage.link??"No Link",onChange:e[3]||(e[3]=s=>I(s))},null,40,D),[[r,t.baseImage.link]]),l("button",{onClick:e[4]||(e[4]=s=>u(!1))},"Reset for slicer"),l("button",{class:"danger",onClick:g},"Delete")]))}});export{B as _};
