var me=Object.defineProperty;var ue=(e,s,a)=>s in e?me(e,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[s]=a;var P=(e,s,a)=>(ue(e,typeof s!="symbol"?s+"":s,a),a);import{d as se,l as T,m as le,o as S,g as D,b as x,F as G,s as J,Q as ge,p as ve,q as fe,a as we,h as R,u as oe,x as pe,e as ne,t as ae}from"./app-DGkwBVRO.js";import{r as ye}from"./register_all_kernels-VAx2wV-G.js";import{k as _e,S as be}from"./body-segmentation.esm-CMFLFyOd.js";import{m as ke,s as xe,M as Ce}from"./Mirror-DOqwJox8.js";const Me=async e=>{await ye(),console.log("Tensorflow ready"),console.log("Setting up inferences"),e.inference.bodyPix=void 0;const s=await _e(be.BodyPix);e.inference.bodyPix=s,console.log("BodyPix ready"),e.inference.blazePose=void 0;const a={runtime:"tfjs",enableSmoothing:!0,modelType:"lite"},c=await ke(xe.BlazePose,a);e.inference.blazePose=c,console.log("BlazePose ready")},Ie=async e=>{(await navigator.mediaDevices.getUserMedia({video:!0})).getTracks().forEach(u=>u.stop());const n=(await navigator.mediaDevices.enumerateDevices()).filter(u=>u.kind==="videoinput").map(u=>({device:u,capabilities:u.getCapabilities()}));console.log(n);const l=n.find(u=>u.device.label.includes("back"))||n[0];e.availableVideoDevices=n,e.currentVideoDeviceId=l.device.deviceId,console.log("Current video device: "+l.device.label)},Pe=async e=>{if(!e.currentVideoDeviceId){console.error("No current video device");return}e.availableVideoDevices.find(n=>n.device.deviceId===e.currentVideoDeviceId);const a=(e.availableVideoDevices.findIndex(n=>n.device.deviceId===e.currentVideoDeviceId)+1)%e.availableVideoDevices.length,c=e.availableVideoDevices[a];e.currentVideoDeviceId=c.device.deviceId,console.log("Switching video device to: "+c.device.label),re(e,e.div_video)},re=async(e,s)=>{if(!s){console.error("No video div");return}if(e.video){const n=e.video.srcObject;n&&n.getTracks().forEach(l=>l.stop()),e.video.pause(),e.video.srcObject=null,e.video=null,s.innerHTML=""}e.div_video=s;const a=document.createElement("video");a.width=640,a.height=480,a.muted=!0,a.setAttribute("playsinline","true"),a.style.objectFit="cover",s.innerHTML="",s.appendChild(a),console.log("Getting media stream"),console.log(e.availableVideoDevices);const c={video:{deviceId:e.currentVideoDeviceId?{exact:e.currentVideoDeviceId}:void 0,width:{ideal:640},height:{ideal:480}}};try{const n=await navigator.mediaDevices.getUserMedia(c);a.srcObject=n}catch(n){console.error("Error accessing media devices.",n);return}if(await new Promise(n=>{a.onloadedmetadata=()=>{console.log("Video metadata loaded"),n(!0)}}),a.play(),!a){console.error("No video element available");return}return e.video=a,await new Promise(n=>{a.addEventListener("loadeddata",()=>{console.log("Video loaded"),n(!0)})}),new Promise(n=>{n(!0)})},Be=async(e,s,a)=>{var l,u;if(!s){console.error("No div process");return}e.div_process=s;const c=document.createElement("canvas");if(c.id="canvas_process",c.width=((l=e.video)==null?void 0:l.videoWidth)||0,c.height=((u=e.video)==null?void 0:u.videoHeight)||0,e.canvas_process=c,e.div_process.appendChild(c),!a){console.error("No div render");return}e.div_render=a;const n=document.createElement("canvas");return n.id="canvas_render",n.width=e.div_render.clientWidth,n.height=e.div_render.clientHeight,e.canvas_render=n,e.div_render.appendChild(n),new Promise(p=>{p(!0)})},Se=async(e,s)=>{},De=async e=>{if(!e.canvas_process){console.error("No canvas");return}const s=e.canvas_process,a=s.getContext("2d");if(!a){console.error("No context");return}a.clearRect(0,0,s.width,s.height)},Ve=async e=>{if(!e.canvas_process||!e.video){console.error("No canvas or video");return}const s=e.canvas_process,a=s.getContext("2d");if(!a){console.error("No context");return}a.drawImage(e.video,0,0,s.width,s.height)},He=async e=>{await De(e),await Ve(e)};class Ne{constructor(){P(this,"drawCanvas",!1);P(this,"canvasses",null);P(this,"cutouts",[]);P(this,"div_video",null);P(this,"video",null);P(this,"div_process",null);P(this,"canvas_process",null);P(this,"div_render",null);P(this,"canvas_render",null);P(this,"mousePos",{x:0,y:0});P(this,"availableVideoDevices",[]);P(this,"currentVideoDeviceId");P(this,"inference",{bodyPix:void 0,blazePose:void 0,cocoSsd:void 0,selfieSegmentation:void 0});P(this,"inferenceData",{poses:void 0,bodyPixSegmentation:void 0,coloredPartImage:void 0,pixels:void 0,maskData:void 0,detectedOjects:void 0,humans:void 0});P(this,"boundingBoxes",[]);console.log("ImageProcessor constructor")}async init(s,a,c){return console.log("init"),await Me(this),console.log("Inferences setup"),await Ie(this),console.log("Got available video devices"),await re(this,s),console.log("Got media stream"),await Be(this,a,c),console.log("Canvasses created"),new Promise((n,l)=>{n(!0)})}async switchVideoDevice(){await Pe(this)}async loop(){if(!this.video||!this.canvas_process){console.error("No video or canvas");return}await Se(this,this.video),await this.draw(),await this.render()}async draw(){await He(this)}async render(){if(!this.canvas_process||!this.canvas_render){console.error("No canvas or rendering canvas");return}const s=this.canvas_process,a=this.canvas_render,c=a.getContext("2d"),n=s.getContext("2d");if(!c||!n){console.error("No context");return}const l=s.width/s.height,u=a.height,p=u*l,y=(a.width-p)/2;c.drawImage(s,y,0,p,u)}}const Te=["src","alt"],Le=se({__name:"Camera",emits:["newSlice","pictureTaken"],setup(e,{emit:s}){const a=new Ne,c=T(null),n=T(null),l=T(null),u=s;le(async()=>{c.value&&n.value&&l.value&&(await a.init(c.value,n.value,l.value),requestAnimationFrame(p))});const p=async()=>{c.value&&n.value&&(await a.loop(),requestAnimationFrame(p))},y=T([]),I=()=>{a.switchVideoDevice()},v=()=>{console.log("take photo"),console.log(a.boundingBoxes),u("pictureTaken",a.boundingBoxes)};return(t,r)=>(S(),D(G,null,[x("div",{ref_key:"video_container",ref:c,class:"video-container"},null,512),x("div",{ref_key:"div_process",ref:n,class:"div-process"},null,512),x("div",{ref_key:"div_render",ref:l,class:"div-render"},null,512),x("button",{class:"switch-device-button",onClick:I},"Switch Device"),x("div",{class:"take-photo-button",onClick:v},"Take Photo"),(S(!0),D(G,null,J(y.value,i=>(S(),D("div",{key:i.part},[x("img",{src:i.img,alt:i.part},null,8,Te)]))),128))],64))}}),We=async(e,s,a,c)=>{console.log("corpse",e),console.log(s.clientHeight);const n=document.createElement("canvas");n.id="collage-canvas",n.width=c.x,n.height=c.y,s.innerHTML="",s==null||s.appendChild(n);const l=n.getContext("2d");if(!l){console.error("no ctx");return}let u=Object.keys(e);if(a.length>0){let g=u[Math.floor(Math.random()*u.length)],k=a[Math.floor(Math.random()*a.length)],f=e[g],H=new Image;H.src=k.img,await new Promise(he=>{H.onload=()=>{he()}}),H.width,H.height,f.label;const X={...f,path:k.img,base_image:{...f.base_image,path:k.img}},Q={...e,[g]:X},j=[...u],F=j.indexOf(g);F!==-1&&j.splice(F,1),j.push(g),e=Q,u=j}console.log("keys",u);let p=[];for(let g=0;g<u.length;g++){const k=u[g],f=e[k],H=new Image;H.src=f.path,await new Promise(F=>{H.onload=()=>{F()}});const X=H.width,Q=H.height,j=k;p.push({img:H,width:X,height:Q,label:j})}p=p.sort(()=>Math.random()-.5);const y=n.width,I=n.height,v={x:y/2,y:I/2};let t={};for(let g=0;g<p.length;g++){const k=p[g];let f=k.width;k.width=y,k.height=k.height*(k.width/f),t[k.label]=k}console.log("pieces",p),l.fillStyle="gray",l.fillRect(0,0,y,I);let r=0,i=0,o=0,d=0,m="empty",C=.05,w={min:.9,max:1.1},N=1,_=0,b=0,h={},V=1,O=10,B=0,M=!1,E=.15,Y=.15;for(m="middle",V=t[m].height/t[m].width,_=y*(Math.random()*(.65-.45)+.45),b=_*V,o=_*N,d=b*(o/_),r=v.x-o/2,i=v.y-d/2,l.fillStyle="red",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d},m="top",V=t[m].height/t[m].width,b=h.middle.y-0-I*C,_=b/V,d=b*N,o=_*(d/b),M=!1,B=0,Y=0,E=.35,w={min:.75,max:1};!M&&B<O;)o=h.middle.width*(Math.random()*(w.max-w.min)+w.min),d=o*(b/_),r=Math.random()*(h.middle.width-o)+h.middle.x,i=h.middle.y-d,i+=d*E*Math.random(),M=!0,B++;if(!M){console.error("Could not find a valid position");return}for(l.fillStyle="blue",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d},m="left",V=t[m].height/t[m].width,_=h.middle.x-0-y*C,b=_*V,o=_*N,d=b*(o/_),M=!1,B=0,Y=.35,w={min:.75,max:1};!M&&B<O;)o=h.middle.width*(Math.random()*(w.max-w.min)+w.min),d=o*(b/_),i=Math.random()*(h.middle.height-d)+h.middle.y,r=h.middle.x-o,r+=o*Y*Math.random(),M=!0,B++;if(!M){console.error("Could not find a valid position");return}for(l.fillStyle="green",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d},m="right",V=t[m].height/t[m].width,_=y-h.middle.x-h.middle.width-y*C,b=_*V,o=_*N,d=b*(o/_),M=!1,B=0,Y=.65,w={min:.75,max:1};!M&&B<O;)o=h.middle.width*(Math.random()*(w.max-w.min)+w.min),d=o*(b/_),i=Math.random()*(h.middle.height-d)+h.middle.y,r=h.middle.x+h.middle.width,r-=o*Y*Math.random(),M=!0,B++;if(!M){console.error("Could not find a valid position");return}l.fillStyle="purple",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d},m="low",V=t[m].height/t[m].width;let Z=(I-h.middle.y-h.middle.height-I*C/2)/2;for(b=Z,_=b/V,d=b*N,o=_*(d/b),M=!1,B=0,E=.55,w={min:.75,max:1};!M&&B<O;)o=h.middle.width*(Math.random()*(w.max-w.min)+w.min),d=o*(b/_),r=Math.random()*(h.middle.width-o)+h.middle.x,i=h.middle.y+h.middle.height,i-=d*E*Math.random(),M=!0,B++;if(!M){console.error("Could not find a valid position");return}for(l.fillStyle="yellow",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d},m="lowlow",V=t[m].height/t[m].width,b=Z,_=b/V,d=b*N,o=_*(d/b),M=!1,B=0,E=.5,w={min:.75,max:1};!M&&B<O;)o=h.low.width*(Math.random()*(w.max-w.min)+w.min),d=o*(b/_),r=Math.random()*(h.low.width-o)+h.low.x,i=h.low.y+h.low.height,i-=d*E*Math.random(),M=!0,B++;l.fillStyle="orange",l.fillRect(r,i,o,d),h[m]={x:r,y:i,width:o,height:d};let A=Object.keys(h),U=1/0,q=1/0;for(let g=0;g<A.length;g++){const k=A[g],f=h[k];f.x<U&&(U=f.x),f.y<q&&(q=f.y)}for(let g=0;g<A.length;g++){const k=A[g],f=h[k];f.x-=U,f.y-=q}let z=document.createElement("canvas"),L=0,W=0;for(let g=0;g<A.length;g++){const k=A[g],f=h[k];f.x+f.width>L&&(L=f.x+f.width),f.y+f.height>W&&(W=f.y+f.height)}z.width=L,z.height=W,console.log("totalWidth",L),console.log("totalHeight",W);let ee=z.getContext("2d");if(!ee){console.error("no buffer ctx");return}let $=["middle","top","left","right","low","lowlow"];$=$.sort(()=>Math.random()-.5);for(let g=0;g<$.length;g++){const k=$[g],f=h[k];let H=f.x,X=f.y;ee.drawImage(t[k].img,H,X,f.width*N,f.height*N)}let K=1;C=.05,(L>y-y*C||W>I-I*C)&&(K=Math.min((y-y*C)/L,(I-I*C)/W));let te=L*K,ie=W*K,de=(y-te)/2,ce=(I-ie)/2;return l.fillStyle="gray",l.fillRect(0,0,y,I),l.drawImage(z,de,ce,te,ie),new Promise(g=>{g()})},Re=async(e,s,a,c)=>{console.log("createCollageBoundingBoxes"),console.log("corpse",e),console.log("collage_container",s);const n=document.createElement("canvas");n.width=c.x,n.height=c.y,n.id="collage-canvas",s.innerHTML="",s.appendChild(n);const l=n.getContext("2d");if(!l){console.error("No context");return}let u=Object.keys(e);console.log("keys",u);let p=[];for(let v=0;v<u.length;v++){const t=u[v],r=e[t],i=new Image;i.src=r.path,await new Promise(C=>{i.onload=()=>{C()}});const o=i.width,d=i.height,m=t;p.push({img:i,width:o,height:d,label:m})}p=p.sort(()=>Math.random()-.5),console.log("pieces",p);const y=a.filter(v=>v.x!==1/0&&v.y!==1/0&&v.width!==1/0&&v.height!==1/0);console.log("filteredBoundingBoxes",y);const I=y.map(v=>{switch(v.label){case"head_mask":return"top";case"torso_mask":return"middle";case"right_arm_mask":return"right";case"left_arm_mask":return"left";case"left_leg_mask":case"right_leg_mask":case"left_foot_mask":case"right_foot_mask":case"left_hand_mask":case"right_hand_mask":return!1;default:return!1}});console.log("pieceLabels",I);for(let v=0;v<y.length;v++){const t=y[v];let r=!1,i=null;switch(l.strokeStyle="blue",l.strokeRect(t.x,t.y,t.width,t.height),t.label){case"head_mask":if(r="top",i=p.find(o=>o.label===r),i){const o=Math.min(t.width/i.width,t.height/i.height),d=i.width*o,m=i.height*o,C=t.x+(t.width-d)/2,w=t.y+(t.height-m)/2;l.drawImage(i.img,C,w,d,m)}break;case"torso_mask":if(r="middle",i=p.find(o=>o.label===r),i){const o=Math.min(t.width/i.width,t.height/i.height),d=i.width*o,m=i.height*o,C=t.x+(t.width-d)/2,w=t.y+(t.height-m)/2;l.drawImage(i.img,C,w,d,m)}break;case"right_arm_mask":if(r="right",i=p.find(o=>o.label===r),i){const o=Math.min(t.width/i.width,t.height/i.height),d=i.width*o,m=i.height*o,C=t.x+(t.width-d)/2,w=t.y+(t.height-m)/2;l.drawImage(i.img,C,w,d,m)}break;case"left_arm_mask":if(r="left",i=p.find(o=>o.label===r),i){const o=Math.min(t.width/i.width,t.height/i.height),d=i.width*o,m=i.height*o,C=t.x+(t.width-d)/2,w=t.y+(t.height-m)/2;l.drawImage(i.img,C,w,d,m)}break;case"left_leg_mask":case"right_leg_mask":case"left_foot_mask":case"right_foot_mask":case"left_hand_mask":case"right_hand_mask":r=!1;default:r=!1}}},Ee={class:"morphing-mirror-layout"},Ae=x("header",null,[x("h1",null,"MU - Morphing Mirror")],-1),je=["hidden"],Oe=x("span",{class:"hint"}," Click on the video to capture a slice ",-1),Ye={key:0,class:"slices"},Xe=["hidden"],ze=["hidden"],$e={class:"list-container"},Fe=x("h2",null,"Used slices",-1),Ge=x("br",null,null,-1),Ue=x("footer",null,"(alpha test)",-1),qe=3,nt=se({__name:"MorphingMirror",setup(e){new Ce;const s=T(null),a=ge(),c=T([]),n=T("camera");le(async()=>{document.body.classList.add("mirror"),await ve()}),fe(()=>{document.body.classList.remove("mirror")});const l=T(!1),u=async()=>{if(l.value)return;if(l.value=!0,!s.value){console.error("no collage container");return}if(!a.props.corpse){console.error("no corpse");return}let v=document.getElementById("canvas_process");if(!v){console.error("no container");return}let t={x:v.offsetWidth,y:v.offsetHeight};await We(a.props.corpse,s.value,c.value,t),n.value="collage",l.value=!1},p=v=>{c.value.unshift(v),c.value.length>qe&&c.value.pop()},y=()=>{window.location.reload()},I=async v=>{if(console.log("picture taken",v),l.value)return;if(l.value=!0,!s.value){console.error("no collage container");return}if(!a.props.corpse){console.error("no corpse");return}let t=document.getElementById("canvas_process");if(!t){console.error("no container");return}let r={x:t.offsetWidth,y:t.offsetHeight};await Re(a.props.corpse,s.value,v,r),n.value="collage",l.value=!1};return(v,t)=>(S(),D("div",Ee,[Ae,x("main",null,[x("div",{class:"screen",hidden:n.value!="camera"},[Oe,we(Le,{onNewSlice:p,onPictureTaken:I}),c.value.length?(S(),D("div",Ye,[(S(!0),D(G,null,J(c.value,r=>(S(),D("div",{key:r.part,class:"slice",style:pe(`background-image: url('${r.img}')`)},null,4))),128))])):R("",!0),c.value.length?(S(),D("button",{key:1,class:"collage-button",onClick:u},"Make Collage")):R("",!0)],8,je),x("div",{class:"screen",hidden:n.value!="collage"},[x("div",{ref_key:"collage_container",ref:s,class:"collage collage-container"},null,512),c.value.length?(S(),D("button",{key:0,class:"redo-button",onClick:t[0]||(t[0]=r=>n.value="camera")},"Go back")):R("",!0),c.value.length?(S(),D("button",{key:1,class:"start-over-button",onClick:t[1]||(t[1]=r=>y())},"Start over with new corpse")):R("",!0),c.value.length?(S(),D("button",{key:2,class:"list-button",onClick:t[2]||(t[2]=r=>n.value="list")},"List")):R("",!0)],8,Xe),x("div",{class:"screen",hidden:n.value!="list"},[x("div",$e,[Fe,oe(a).props.corpse?(S(!0),D(G,{key:0},J(oe(a).props.corpse,r=>(S(),D("div",{key:r.id,class:"list-item"},[x("span",null,[ne(" Name:"),Ge,ne(" "+ae(r.base_image.name??"no name"),1)]),x("span",null," Link: "+ae(r.base_image.link??"no link"),1)]))),128)):R("",!0)]),c.value.length?(S(),D("button",{key:0,class:"list-button",onClick:t[3]||(t[3]=r=>n.value="collage")},"Go Back")):R("",!0)],8,ze)]),Ue]))}});export{nt as default};
