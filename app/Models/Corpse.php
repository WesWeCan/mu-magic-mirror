<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

use App\Models\BaseImage;

/** A corpse is a output generated by user.
 * It is stored as an archive.
 * It links to multiple base images.
 * 
 * @property string $path
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property array $base_images
 */
class Corpse extends Model
{
    use HasFactory;

    protected $fillable = [
        'path',
        'base_images',
    ];

    protected $casts = [
        'base_images' => 'array',
    ];


    public static function boot()
    {
        
        parent::boot();

    }


    // Find the base images using an array of IDs.
    // Example: [1, 2, 3, -1]
    // If an ID is -1, it represents the user (e.g., "YOU").
    // If a base image with the given ID does not exist, return "unknown base image".
    // Return a collection of base images, including only their names and links.
    public function getBaseImages()
    {

        $baseImages = collect($this->base_images)->map(function($baseImageId){
            if($baseImageId == -1){
                return [
                    'name' => 'MU Visitor',
                    'link' => '#',
                ];
            }

            $baseImage = BaseImage::find($baseImageId);

            if(!$baseImage){
                return [
                    'name' => '[Unknown Base Image]',
                    'link' => '#',
                ];
            }

            return [
                'name' => $baseImage->name,
                'link' => $baseImage->link,
            ];
        });

        return $baseImages;

    }


    /** Delete the corpse image and associated image. */
    public function delete()
    {
        // Delete the associated corpse image
        Storage::delete($this->path);

        // Delete the model
        return parent::delete();
    }


}
